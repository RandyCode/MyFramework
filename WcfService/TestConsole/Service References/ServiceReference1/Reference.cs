//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsole.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IUtilsService")]
    public interface IUtilsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilsService/DoWork", ReplyAction="http://tempuri.org/IUtilsService/DoWorkResponse")]
        string DoWork(string cipher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilsService/DoWork", ReplyAction="http://tempuri.org/IUtilsService/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync(string cipher);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUtilsServiceChannel : TestConsole.ServiceReference1.IUtilsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UtilsServiceClient : System.ServiceModel.ClientBase<TestConsole.ServiceReference1.IUtilsService>, TestConsole.ServiceReference1.IUtilsService {
        
        public UtilsServiceClient() {
        }
        
        public UtilsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UtilsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork(string cipher) {
            return base.Channel.DoWork(cipher);
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync(string cipher) {
            return base.Channel.DoWorkAsync(cipher);
        }
    }
}
